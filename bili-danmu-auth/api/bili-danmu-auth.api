syntax = "v1"

info (
	title: danmu-auth
)

@server(
	prefix: /api/v1
	group: danmuauth
)
service danmu-auth {
	@doc "申请新 vcode"
	@handler DanmuAuthApplyNewVCodeHandler
	get /vcode/:buid (ApplyNewVCodeRequest) returns (ApplyNewVCodeResponse)
	
	@doc "提交 vcode status 加一"
	@handler DanmuAuthStatusAddOneHandler
	post /vcode/:vcode (AddOneRequest) returns (AddOneResponse)
	
	@doc "获取 client_id 的校验信息, 若不需要jwt, 则使用此接口自行判断认证信息"
	@handler DanmuAuthVCodeInfoHandler
	get /auth/:buid/info (VCodeInfoRequest) returns (VCodeInfoResponse)
	
	@doc "认证 vcode, 分发 JWT, 搭配 Get /jwt 使用"
	@handler DanmuAuthVerifyHandler
	get /auth/:buid/jwt (VerifyRequest) returns (VerifyResponse)
}

@server(
	prefix: /api/v1
	group: devloper
	jwt: Auth
)
service danmu-auth {
	@doc "校验 JWT, 搭配 Get /auth/:client_id/jwt 使用"
	@handler DanmuAuthCheckHandler
	get /jwt (CheckRequest) returns (CheckResponse)
	
	@doc "添加 Key"
	@handler DanmuAuthAddKeyHandler
	post /key (AddKeyRequest) returns (AddKeyResponse)
	
	@doc "删除 Key"
	@handler DanmuAuthDelKeyHandler
	delete /key (DeleteKeyRequest) returns(DeleteKeyResponse)
	
	@doc "获取 Key 列表和余额"
	@handler DanmuAuthGetKeyListHandler
	get /keys (GetKeyListRequest) returns (GetKeyListResponse)
	
}

@server(
	prefix: /api/v1
	group: devloper
)
service danmu-auth {
	@doc "充值"
	@handler DanmuAuthRechargeHandler
	post /recharge (RechargeRequest) returns (RechargeResponse)
}

type ( // 申请新 vcode, get /vcode/:buid
	ApplyNewVCodeRequest {
		Buid     int    `path:"buid"`
		Key      string `form:"key,optional"` // 不填 为 devloper 登录, 只有 经过弹幕认证的用户才能申请 vcode
		ClientID string `form:"client_id"`
	}

	ApplyNewVCodeResponse {
		Vcode    string `json:"vcode"`
		ClientID string `json:"client_id"`
	}
)

type ( // 提交 vcode status 加一, post /vcode/:vcode
	AddOneRequest {
		ApiKey string `json:"api_key"`
		Vcode  string `path:"vcode"`
		Buid   int    `json:"buid"`
	}

	AddOneResponse {
		Status int `json:"status"`
	}
)

type ( // 获取 vcode 校验信息, 若不需要jwt, 则使用此接口自行判断认证信息, get /auth/:client_id/info
	VCodeInfoRequest {
		Buid     int    `path:"buid"`
		ClientID string `form:"client_id"`
	}

	VCodeInfoResponse {
		Count    int    `json:"count"`
		ClientID string `json:"client_id"`
	}
)

type ( // 认证 vcode, 分发 JWT, get /auth/:client_id/jwt
	VerifyRequest {
		Buid     int    `path:"buid"`
		ClientID string `form:"client_id"`
	}

	VerifyResponse {
		AccessToken  string `json:"access_token"`
		AccessExpire int64  `json:"access_expire"`
	}
)

type (
	CheckRequest {
	}

	CheckResponse {
		Buid int `json:"buid"`
	}
)

type (
	AddKeyRequest {
	}

	AddKeyResponse {
		Key string `json:"key"`
	}
)

type (
	DeleteKeyRequest {
		Key string `form:"key"`
	}

	DeleteKeyResponse {
	}
)

type (
	GetKeyListRequest {
	}

	GetKeyListResponse {
		Balance int      `json:"balance"`
		Keys    []string `json:"keys"`
	}
)

type (
	RechargeRequest {
		ApiKey string `json:"api_key"`
		Buid   int    `json:"buid"`
		Amount int    `json:"amount"`
	}

	RechargeResponse {
		Ok bool `json:"ok"`
	}
)